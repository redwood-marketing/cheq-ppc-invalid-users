@use "sass:math";
@use "sass:map";
// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import '../../node_modules/bootstrap/scss/functions';

// 2. Include any default variable overrides here
$primary: #00b16b;
$secondary: #04213f;
$tertiary: #65c261;
$quaternary: #eafef4;
$accent: #E24650;
$dark: $secondary;
$light: #f7f7f7;

// --ff-body: "soleto", sans-serif;
// --ff-titles: "prometo", sans-serif;

// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
$enable-negative-margins: true;



@import '../../node_modules/bootstrap/scss/variables';

$font-family-base: "soleto";
$font-weight-base: $font-weight-normal;

$paragraph-margin-bottom: 0;

$headings-font-family:   "prometo";
$headings-margin-bottom: 0;
$headings-font-weight:   $font-weight-normal;
$headings-line-height:   1.2;

$display-font-family: $headings-font-family;
$display-font-weight: $font-weight-bold;

$min-contrast-ratio: 2.7;
$theme-colors: map-merge(
	(
		'primary':    $primary,
		'secondary':  $secondary,
		'tertiary':   $tertiary,
		'quaternary': $quaternary,
		'accent':     $accent
	),
	$theme-colors
);

$colors: map-remove($colors, 'blue', 'indigo', 'purple', 'pink', 'orange', 'yellow', 'green', 'teal', 'cyan');

$enable-cssgrid: true;
$grid-breakpoints: (
	xs: 0,
	sm: 36rem,
	md: 48rem,
	lg: 62rem,
	xl: 80rem,
	xxl: 100rem,
);
$container-padding-x: clamp(1rem, 5vw, 4rem);

$enable-responsive-font-sizes: true;
$spacer: 1rem;
$spacer-levels: 10;
$spacer-scale: 1.33;
$spacers: ();

@for $level from ($spacer-levels * -1) through $spacer-levels {
    @if $level < 0 {
        $spacers: map.merge(
            $spacers, 
            ( #{"\\{" + math.abs($level) + "\\}"}: $spacer * math.pow($spacer-scale, $level + 1) )
        );
    }
    
    @if $level == 0 {
        $spacers: map.merge( $spacers, ( 0 : 0 ) );
    }
    
    @else {
        $spacers: map.merge( 
            $spacers, 
            ( $level: $spacer * math.pow($spacer-scale, $level - 1) )
        );
    }
}

$spacers: map.merge($spacers, $spacers);


// 4. Include any default map overrides here

// 5. Include remainder of required parts
@import '../../node_modules/bootstrap/scss/maps';
@import '../../node_modules/bootstrap/scss/mixins';
@import '../../node_modules/bootstrap/scss/root';

// 6. Optionally include any other parts as needed
@import '../../node_modules/bootstrap/scss/utilities';

.\@hover {
	@at-root [class*='\@hover'] {
		transition: $transition-base;
	}
	@each $color, $value in $theme-colors {
		&\:bg-#{$color} {
			&:hover {
				background-color: var(--#{$prefix}#{$color}) !important;
			}
		}

		&\:#{$color} {
			&:hover {
				color: var(--#{$prefix}#{$color}) !important;
			}
		}

		&\:border-#{$color} {
			&:hover {
				border-color: var(--#{$prefix}#{$color}) !important;
			}
		}
	}
}

.justify-items-center {
    justify-items: center;
}

@import "../../node_modules/bootstrap/scss/reboot";
@import "../../node_modules/bootstrap/scss/type";
@import "../../node_modules/bootstrap/scss/images";
@import "../../node_modules/bootstrap/scss/containers";
@import "../../node_modules/bootstrap/scss/grid";
@import '../../node_modules/bootstrap/scss/helpers';
@import '../../node_modules/bootstrap/scss/transitions';
@import '../../node_modules/bootstrap/scss/nav';

$btn-border-radius:    10rem;
$btn-padding-y:        .8em;
$btn-padding-x:        3em;
$btn-font-family:      $headings-font-family;
$btn-font-size:        .8rem;
$btn-font-weight:      $font-weight-medium;
$btn-line-height:      1;
$btn-white-space:      nowrap;

$btn-font-size-sm:     $btn-font-size * 0.8;
$btn-border-radius-sm: $btn-border-radius; 
$btn-padding-y-sm:     $btn-padding-y;
$btn-padding-x-sm:     $btn-padding-x;

$btn-font-size-lg:     $btn-font-size * 1.2;
$btn-border-radius-lg: $btn-border-radius; 
$btn-padding-y-lg:     $btn-padding-y;
$btn-padding-x-lg:     $btn-padding-x;

@import '../../node_modules/bootstrap/scss/buttons';

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import '../../node_modules/bootstrap/scss/utilities/api';

::selection {
    background-color: var(--selection, var(--#{$prefix}primary));
    color: var(--selection, var(--#{$prefix}white))
}

img {
    object-fit: contain;
}

svg {
    transition: translate .2s ease;

    &:is(a:hover > &) {
        translate: .5ch;
    }
}
.sr-only {
	border: 0 !important;
	clip: rect(1px, 1px, 1px, 1px) !important;
	-webkit-clip-path: inset(50%) !important;
	clip-path: inset(50%) !important;
	height: 1px !important;
	margin: -1px !important;
	overflow: hidden !important;
	padding: 0 !important;
	position: absolute !important;
	width: 1px !important;
	white-space: nowrap !important;
}

.text-accent {
	color: var(--bs-accent);
}

.mega_navigation {
	position: sticky;
	top: 0;
	z-index: 2000;
	width: 100%;
	overscroll-behavior: contain;
	box-sizing: border-box;
	--menu--bg-color: #051421;
	--menu--mobile-shadow: 0 7px 22px -18px rgba(0, 0, 0, 0.25), 0 39px 37px 3px rgba(0, 0, 0, 0.05);
	--menu--desktop-shadow: 0 4px 7px 0 rgba(0, 0, 0, 0.25);
	--menu--transition: .3s ease-in;
	--menu--border-top: .375rem .375rem 0 0;
	--menu--border-bottom: 0 0 .375rem .375rem;
	--menu--toggle-line-width: 3px;
	> * {
		box-sizing: border-box;
	}
	a {
		text-decoration: none;
	}

	&__bar {
		padding: clamp(1em, 2vw, 1.5em) max(1.5em, (100vw - 90rem) / 2);
		font-size: 1rem;
		color: var(--bs-white);
		background-color: var(--menu--bg-color);
		line-height: 1.4;
		gap: 0 clamp(1em, 3vw, 4em);
		display: grid;
		@include media-breakpoint-up(lg) {
			grid-template-columns: auto 1fr auto;
			grid-template-areas: 'üå∂Ô∏è üç∞ üéâ';
			font-size: clamp(0.7rem, 1vw, 0.8rem);
			align-items: center;
		}

		@include media-breakpoint-down(lg) {
			grid-template-columns: 1fr auto;
			grid-template-areas: 'üå∂Ô∏è üçî';
		}
	}

	&__holder {
		min-height: 32px; // prevent layout shift
		grid-area: üå∂Ô∏è;
		display: flex;
		flex-direction: row;

		.mega_navigation__logo {
			color: var(--bs-white);
			align-self: center;
			&:hover {
				color: inherit;
			}
			svg {
				width: clamp(8em, 20vw, 12em);
				display: block !important;
			}
		}
	}

	&__get_demo {
		grid-area: üéâ;
		@include media-breakpoint-down(lg) {
			display: none;
		}
	}
	&__toggle,
	&__back button {
		appearance: none;
		background: none;
		border: none;
		line-height: 0;
		color: inherit;
		cursor: pointer;
	}
	&__toggle {
		grid-area: üçî;
		width: 1.3em;
		aspect-ratio: 1 / 1;
		position: relative;
		align-self: center;

		@include media-breakpoint-up(lg) {
			display: none;
		}

		&::after,
		&::before {
			content: '';
			height: var(--menu--toggle-line-width);
			rotate: calc(var(--menu--toggle-rotation-direction, 1) * var(--menu--toggle-angle, 45deg));
			translate: 0 calc(var(--menu--toggle-offset, 0) * var(--menu--toggle-rotation-direction, 1));
			top: calc(50% - (var(--menu--toggle-line-width) / 2));
			display: block;
			left: 0;
			background: currentColor;
			width: 100%;
			transition: rotate 0.2s ease var(--menu--toggle-rotation-delay, 0.2s), translate 0.2s ease;
			position: absolute;
			border-radius: 100rem;
		}

		&::after {
			--menu--toggle-rotation-direction: -1;
		}
	}
	&__overlay {
		user-select: none;
		pointer-events: none;
		background-color: rgba(0, 0, 0, 0.9);
		position: absolute;
		inset: 0;
		z-index: 15;
	}
	.mega_menu {
		grid-area: üç∞;
		width: 100%;

		&__items {
			overflow: hidden;
			list-style: none;
			margin: 0;
			padding: 0;
			display: flex;
			flex-direction: row;
			gap: clamp(1em, 3vw, 4em);
		}

		&__item {
			display: inline-block;
			cursor: pointer;
			user-select: none;
			color: var(--bs-white);
			font-size: clamp(0.7rem, 1vw, 0.8125rem);
			// font-family: $heading-font;
			// font-weight: 600;
			padding: 0.3rem;
			white-space: nowrap;
			position: relative;
			&::after {
				// fixing a hover hole on svgs
				display: block;
				content: '';
				position: absolute;
				inset: 0;
			}

			&:hover {
				text-decoration: none;
			}
			> svg {
				display: inline-block;
				height: 1em;
				overflow: visible;
				vertical-align: -0.125em;
			}
		}

		&__sub_container {
			position: absolute;
			margin-top: 1.3rem;
			color: var(--bs-dark);
			font-size: rem-calc(14);
			pointer-events: none;
			opacity: 0;
			will-change: auto;
			transition: opacity var(--menu--transition);

			&.menu--active {
				pointer-events: auto;
				opacity: 1;
			}

			&.container-full {
				width: 100%;
				left: 0;
				right: 0;
			}

			@include media-breakpoint-up(lg) {
				&.container-follow {
					width: 650px;
					right: 1rem;
					transform: translateX(-10.4%);
				}
			}
			@media (min-width: 1600px) {
				&.container-follow {
					right: unset;
				}
			}

			.constrain {
				max-width: 77rem;
				margin-right: auto;
				margin-left: auto;
				overflow: hidden;
				@include media-breakpoint-up(lg) {
					box-shadow: var(--menu--desktop-shadow);
				}

				&--smaller {
					max-width: 70rem;
				}
			}
			p:not(.h1, .h2, .h3, .h4, .h5, .h6),
			a {
				font-size: 0.8125rem;
			}
			.text-smaller {
				font-size: 0.6875rem !important;
			}
			ul,
			ol {
				list-style: none;
				margin: 0;
				padding: 0;
			}
			figure {
				margin: 0;
			}
			.hover-chevron {
				.fa-chevron-right {
					color: transparent;
				}

				a:hover .fa-chevron-right {
					color: inherit;
				}
			}
			.mobile-chevron .fa-chevron-right {
				display: none;
			}
			.has-desc {
				display: grid;
				grid-template-columns: 26px auto min-content;
				gap: 0.1rem 1rem;
				grid-template-areas:
					'üë®‚Äçüé® üß≥ üëâ'
					'üë®‚Äçüé® üë®‚Äçüíª üë®‚Äçüíª';
				> figure {
					grid-area: üë®‚Äçüé®;
				}
				> span {
					grid-area: üß≥;
				}
				.fa-chevron-right {
					grid-area: üëâ;
				}
				.desc {
					grid-area: üë®‚Äçüíª;
					color: var(--bs-gray-600) !important;
					padding-right: clamp(0.6rem, 0.5vw, 1.5rem);
				}
			}
			.grid-article-side {
				display: grid;
				grid-template-columns: 0.55fr 1.45fr;
				gap: 0 1.5rem;
				figure {
					grid-row: 1/-3;
					img {
						aspect-ratio: 16 / 9;
					}
				}
				.cta {
					align-self: end;
				}
				@include media-breakpoint-down(lg) {
					align-items: center;
					gap: 0 0.6rem;
					figure {
						grid-row: unset;
					}
					.cta {
						display: none;
					}
				}
			}
			.generic-cta {
				color: var(--bs-white);
				&:hover {
					color: var(--bs-secondary) !important;
					border-color: var(--bs-secondary);
					&::after {
						background-image: url('data:image/svg+xml,<svg viewBox="0 0 10 8" xmlns="http://www.w3.org/2000/svg"><path fill="%2304213f" d="M0 4.02c0 .2.09.39.24.53s.36.22.57.22h6.42L5.1 6.74a.72.72 0 0 0-.21.52c0 .2.08.38.23.52.15.14.35.22.56.22.21 0 .42-.07.57-.2l3.51-3.25a.72.72 0 0 0 .24-.53c0-.2-.09-.4-.24-.53L6.25.24A.87.87 0 0 0 5.08.22a.75.75 0 0 0-.18.25.7.7 0 0 0 .02.59c.04.09.1.17.18.24l2.13 1.97H.81c-.45 0-.81.33-.81.75Z"/></svg>');
					}
				}
			}
		}
	}

	&__extra-menu {
		background-color: var(--bs-black);
		color: white;
		padding: 0.1rem max(1.5em, (100vw - 90rem) / 2);
		@include media-breakpoint-down(lg) {
			display: none;
		}
		.mega_menu__sub_container {
			margin-top: 0.5rem;
		}
	}

	.extra_menu {
		list-style: none;
		margin: 0;
		padding: 0;
		display: flex;
		flex-direction: row;
		justify-content: flex-end;
		gap: 1rem;
		.mega_menu__item {
			font-weight: 400;
		}

		@include media-breakpoint-down(lg) {
			padding: 1rem;
			flex-direction: column;
			border-top: 1px solid var(--bs-gray-400);
			background-color: var(--bs-gray-200);
			border-radius: var(--menu--border-bottom);
			justify-content: unset;
		}
	}

	.mega_submenu {
		list-style: 0;
		margin: 0;
		padding: 0;

		figure {
			img {
				aspect-ratio: 1/1;
				object-fit: contain;
			}
		}
	}

	// since we don't have bootstrap grid.
	@include media-breakpoint-up(lg) {
		.grid {
			&-2-1 {
				display: grid;
				grid-template-columns: 2fr 1fr;
			}

			&-3-1 {
				display: grid;
				grid-template-columns: 3fr 1fr;
			}

			&-1-3 {
				display: grid;
				grid-template-columns: 1fr 3fr;
			}
			&-2-3 {
				display: grid;
				grid-template-columns: 2fr 3fr;
			}
			&-2-2-3 {
				display: grid;
				grid-template-columns: 0.28fr 0.28fr 0.44fr;
			}

			&-1-1 {
				display: grid;
				grid-template-columns: 1fr 1fr;
			}
			&-1-1-1 {
				display: grid;
				grid-template-columns: 1fr 1fr 1fr;
			}
			&-1-1-2 {
				display: grid;
				grid-template-columns: 1.1fr 1.1fr 2fr;
			}
			&-span-all {
				grid-column: 1/-1;
			}
			&-ai-center {
				align-items: center;
			}
		}

		.order-lg-0 {
			order: 0 !important;
		}

		[href] {
			.text-slide-in {
				> span {
					display: inline-block;
					width: 0;
					opacity: 0;
					overflow: hidden;
					text-wrap: nowrap;
					white-space: nowrap;
					will-change: width;
					transition: width 0.2s ease-in-out, opacity 0.2s ease-in-out;
				}
			}
			&:hover {
				.text-slide-in {
					> span {
						width: 80px;
						opacity: 1;
					}
				}
			}
		}
	}

	// mobile adjustment
	@include media-breakpoint-down(lg) {
		padding: 1rem;
		background-color: var(--menu--bg-color);

		.mega_navigation__bar {
			position: relative;
			grid-template-areas:
				'üå∂Ô∏è üçî'
				'üç∞ üç∞';

			padding: 0.6rem 1rem;
			border-radius: var(--menu--border-top);
			overflow: visible;
			border-bottom: 1px solid;
			border-color: transparent; // prevent layout shift
		}
		.mega_navigation__logo {
			--nav-logo-width: 128px;
			width: var(--nav-logo-width);
			opacity: 1;
			svg {
				width: var(--nav-logo-width); // can no longer clamp due to animation.
				height: auto;
			}
		}

		.mega_navigation__back {
			align-self: center;
			width: 0;
			opacity: 0;
			text-wrap: nowrap;
			white-space: nowrap;
		}
		.mega_navigation__logo,
		.mega_navigation__back {
			overflow: hidden;
			will-change: width, opacity;
			transition: width var(--menu--transition), opacity var(--menu--transition);
		}

		.mega_menu {
			position: absolute;
			pointer-events: none;
			left: -1rem;
			right: -1rem;
			top: calc(0.6rem + 1px); // bottom padding of __bar + 1px border.
			width: calc(100% + 2rem);
			background-color: var(--bs-white);
			box-shadow: var(--menu--mobile-shadow);
			border-radius: var(--menu--border-bottom);
			opacity: 0;

			max-height: calc(100vh - 6rem);
			overflow-x: hidden;
			overflow-y: auto;

			will-change: height;
			transition: height var(--menu--transition);

			&::-webkit-scrollbar {
				width: 0.625rem;
			}
			&::-webkit-scrollbar-track {
				border-radius: 0 0 0.375rem 0;
				background-color: var(--bs-white);
			}
			&::-webkit-scrollbar-thumb {
				border-radius: 5px;
				background-color: var(--teal);
			}

			&__items {
				flex-direction: column;
				padding: 1rem;
				gap: 1.125rem;
				position: relative;
				overflow: visible;
			}
			&__item {
				display: flex;
				justify-content: space-between;
				font-size: 0.825rem;
			}
			&__item {
				color: var(--bs-dark);
			}
			&__sub_container {
				margin-top: 0;
				overflow: hidden;
				top: 0;
				left: 0;
				z-index: 10;
				width: 100%;
				border-radius: var(--menu--border-bottom);
				box-shadow: var(--menu--mobile-shadow);

				transition-property: transform, opacity;
				transition-duration: 0.3s;
				transition-timing-function: ease-in;

				&.menu--active {
					opacity: 1;
					height: auto;
					clip: auto;
					transform: translateX(0);
				}

				&:not(.menu--active) {
					opacity: 0;
					height: 0;
					clip: rect(0, 0, 0, 0);
					transform: translateX(2em);
				}

				.border-left {
					border-left: none !important;
					border-top: 1px solid;
				}
				.annoying-border {
					// Âøå resent
					position: relative;
					&::before {
						content: '';
						border-top: 1px solid var(--bs-gray-400);
						display: block;
						position: absolute;
						top: 0;
						left: -1rem;
						width: calc(100% + 2rem);
						height: 0;
					}
				}
				.break {
					flex-basis: 100%;
					height: 0;
				}
			}

			.hover-chevron .fa-chevron-right {
				color: inherit;
				margin-left: auto;
			}
			.menu-overview {
				.ratio-16\:9 {
					--aspect-ratio: 4 / 1;
				}
			}
			.fa-chevron-down {
				transform: rotate(270deg);
				transform-origin: center 70%;
			}
			.has-desc {
				grid-template-areas: 'üë®‚Äçüé® üß≥ üëâ';
				align-items: center;
				.desc {
					display: none;
				}
			}
		}

		&:not(.menu-visible) {
			.mega_navigation__toggle {
				--menu--toggle-angle: 0;
				--menu--toggle-offset: calc(var(--menu--toggle-line-width) * 1.5);
				--menu--toggle-rotation-delay: -2s;
			}
		}

		&.menu-visible {
			.mega_navigation__bar {
				background-color: var(--bs-white);
				border-color: var(--bs-gray-400);
				.mega_navigation__toggle,
				.mega_navigation__logo {
					color: var(--bs-dark);
				}
			}
			.mega_menu {
				opacity: 1;
				pointer-events: all;
			}
		}

		&.mobile-sub-open {
			.mega_navigation__holder .mega_navigation__logo {
				width: 0;
				opacity: 0;
			}
			.mega_navigation__holder .mega_navigation__back {
				width: 72px;
				opacity: 1;
			}
		}
	}
}
